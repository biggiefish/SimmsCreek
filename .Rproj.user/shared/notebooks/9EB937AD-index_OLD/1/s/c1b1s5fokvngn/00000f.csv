"0","# Load Juvenile and Adult Bio Data ----"
"0","   data_sets <- c(""Juvenile"",""Adult"")"
"0",""
"0","      for(i in data_sets){"
"0","            #1.1 List of all files in Directory "
"0","            files_list <- list.files(paste0(""Data/"",i ,""/""), pattern = ""*.xlsx"", full.names = TRUE)"
"0","            "
"0","                # Use lapply to read in all files and store them as list elements in one list"
"0","                list_of_dfs <- lapply(as.list(files_list), function(x) readWorkbook(x, sheet = ""SimmsBioData""))"
"0","        "
"0","                # Create a vector of names based on the year of data collection. "
"0","                df_names2 <- paste0(i,""_SimmsBio_"", as.numeric(str_extract(files_list, ""(\\d)+"")))"
"0","                "
"0","                # Assign the names to our list of dfs"
"0","                names(list_of_dfs) <- df_names2"
"0","          "
"0","          #1.2 Dunno what this does..."
"0","           dfs_list <-lapply(list_of_dfs, ""["")"
"0","               # my_cols <- c(""Date"", ""Species"", ""Stage"", ""US/DS"", ""Length"", ""Weight"", ""Comments"")"
"0","         "
"0","          #1.3 Prepare final dataframe"
"0","          df <-   bind_rows(dfs_list, .id = ""Dataset"")"
"0","          "
"0","             ## Rename dataframe based on looping variable (e.g., Juvenile or Adult)"
"0","             assign(paste(""simms_bio_"",i, sep=""""), df) %>%"
"0","              mutate(MonitorPeriod = i)"
"0","      }"
"0",""
"0","    ### Format Juvenile Data ----"
"0","    juv <- simms_bio_Juvenile %>%"
"0","           mutate(Period = ""Spring"","
"0","                  Sex = """","
"0","                  DatasetYear = as.numeric(str_extract(Dataset, ""(\\d)+"")),"
"0","                  Date = as.Date(Date, origin = ""1899-12-30""),"
"0","                  Year = as.numeric(format(Date, format = ""%Y""))) %>%"
"0","           filter(DatasetYear == Year) %>%                                          # Filter to exclude relic data from past years"
"0","           rename(Direction = ""US/DS"") %>%"
"0","           select(""Dataset"",""Period"", ""Date"", ""Species"", ""Stage"",""Sex"", ""Direction"", ""Length"", ""Weight"", ""Comments"")"
"0",""
"0","    ### Format Adult Data ----"
"0","    adult <- simms_bio_Adult %>%"
"0","             mutate(Period = ""Fall"","
"0","                    Stage = """","
"0","                    DatasetYear = as.numeric(str_extract(Dataset, ""(\\d)+"")),"
"0","                    Date = as.Date(Date, origin = ""1899-12-30""),"
"0","                    Year = as.numeric(format(Date, format = ""%Y""))) %>%"
"0","             filter(DatasetYear == Year) %>%                                          # Filter to exclude relic data from past years"
"0","             rename(Direction = ""US/DS"") %>%"
"0","             select(""Dataset"",""Period"",""Date"", ""Species"", ""Stage"",""Sex"", ""Direction"", ""Length"", ""Weight"", ""Comments"")"
"0",""
"0","      ### Join Juvenile and Adult Datasets ----"
"0","          simms_bio <- rbind(juv,adult)"
"0","                    ## See unique directions"
"0","                            # unique(simms_bio$Direction)"
"0","                    ## See unique species codes"
"0","                            # unique(simms_bio$Species)"
"0","                 "
"0","          simms_bio_all <- simms_bio %>%     "
"0","                              ## Correct entry errors in direction data. Assume that US and UST are equal (and that UST is not fish observed US of trap).    "
"0","                              mutate(Direction = ifelse(grepl(""US"", Direction), ""Upstream"", "
"0","                                                     ifelse(grepl(""DS"", Direction), ""Downstream"","
"0","                                                          ifelse(Period == ""Fall"","
"0","                                                              ifelse(is.na(Direction),""Upstream*"",Direction),  # assume all fall fish are moving US"
"0","                                                                 ifelse(is.na(Direction),""Not Collected"",Direction)))),"
"0","                                     ## Correct species entry errors "
"0","                                     Species = recode(as.factor(Species),"
"0","                                                 ""CO""  = ""CO"","
"0","                                                 ""CO "" = ""CO"","
"0","                                                 "" CO"" = ""CO"","
"0","                                                 ""CO-J""= ""CO-J"","
"0","                                                 ""JK""  = ""CO-J"","
"0","                                                 ""CT""  = ""CT"","
"0","                                                 ""CT "" = ""CT"","
"0","                                                 ""CN""  = ""CN"","
"0","                                                 ""CN "" = ""CN"","
"0","                                                 ""CH""  = ""CN"","
"0","                                                 ""PK"" = ""PK""),"
"0","                                Species = factor(Species, "
"0","                                                 levels = c(""CT"",""CO"", ""CO-J"",""CN"",""CM"",""PK"")))"
"0",""
"0","             "
"0",""
"0","# Load Environmental Data ----"
"0","      for(i in data_sets){"
"0","            #1.1 List of all files in Directory "
"0","            files_list <- list.files(paste0(""Data/"",i ,""/""), pattern = ""*.xlsx"", full.names = TRUE)"
"0","        "
"0","           # files_list <- list.files(paste0(""Data/Adult/""), pattern = ""*.xlsx"", full.names = TRUE)"
"0","            "
"0","                # Use lapply to read in all files and store them as list elements in one list"
"0","                list_of_dfs <- lapply(as.list(files_list), function(x) readWorkbook(x, sheet = ""SimmsCreek"", cols = 1:10))"
"0",""
"0","                # Create a vector of names based on the year of data collection. "
"0","                df_names2 <- paste0(i,""_SimmsEnv_"", as.numeric(str_extract(files_list, ""(\\d)+"")))"
"0","                "
"0","                # Assign the names to our list of dfs"
"0","                names(list_of_dfs) <- df_names2"
"0","          "
"0","          #1.2 Dunno what this does..."
"0","          # dfs_list <-lapply(list_of_dfs, ""["")"
"0","            dfs_list <- lapply(list_of_dfs, ""["")"
"0","          "
"0","         "
"0","          #1.3 Prepare final dataframe"
"0","          df <-   bind_rows(dfs_list, .id = ""Dataset"") %>%"
"0","                     mutate(MonitorPeriod = i)"
"0","          "
"0","         ## Rename dataframe based on looping variable (e.g., Juvenile or Adult)"
"0","         assign(paste(""simms_env_"",i, sep=""""), df) "
"0","      }    "
"0","    "
"0","    ## Rename simms env. variables"
"0","    simms_env_Juvenile <- simms_env_Juvenile %>%"
"0","                          rename(pH = ""PH"","
"0","                                 Gauge = ""Staff.Gauge"")"
"0","    "
"0","    #### Join Env. Datasets ----"
"0","    simms_env <- rbind(simms_env_Juvenile,simms_env_Adult) %>%"
"0","                     mutate(Period = ifelse(MonitorPeriod == ""Adult"",""Fall"",""Spring""),"
"0","                            DatasetYear = as.numeric(str_extract(Dataset, ""(\\d)+"")),"
"0","                            Date = as.Date(Date, origin = ""1899-12-30""),"
"0","                            Time = format(as.POSIXct(Time), ""%I:%M %p""),"
"0","                            Year = as.numeric(format(Date, format = ""%Y"")),"
"0","                            binary = 1) %>%"
"0","                     filter(DatasetYear == Year)"
"0","    "
"0",""
"0","# Join Bio and Env Data ----"
"0","     # Create Date Sequence across entire study period  "
"0","      date_seq <- data.frame(Date = seq(ymd('2008-04-15'), ymd('2024-06-15'), by = 'days')) %>%"
"0","                      mutate(Month = strftime(Date, format = ""%m""),"
"0","                             Month = as.numeric(Month))"
"0",""
"0","    # Join Data to Date Sequence"
"0","    all_dat <- left_join(date_seq,simms_env, by = c(""Date""), suffix = c("""",""_Env"")) %>%"
"0","               left_join(., simms_bio_all, by = c(""Date"",""Period""), suffix = c("""",""_Bio"")) %>%"
"0","               mutate(Year = as.numeric(format(Date, format = ""%Y"")),"
"0","                      Period = factor(Period, levels = c(""Spring"",""Fall""))) %>%"
"0","               select(Year, Period, Date, Month, Time,    Air.Temp, Water.Temp, "
"0","                      pH,   DO,     TDS,  Gauge, Weather, Species, Length, Weight)"
"0","    "
"0","# Add Regional Abundance Data   "
"0","reg.dat <- read.csv(""Data/RegionalAbundance.csv"")  %>%"
"0","           filter(region == ""Vancouver Island & Mainland Inlets"","
"0","                  year >= 2005)  "
"0","    "
