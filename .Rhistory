## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = mean(date.std),
MeanDiff = as.numeric(as.Date(MeanPeak)-as.Date(date.std)))
catch_peak
## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = mean(date.std),
MeanDiff = as.numeric(as.Date(MeanPeak, "Y-%b-%d")-as.Date(date.std, "Y-%b-%d")))
catch_peak
## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = mean(date.std),
MeanDiff = difftime(MeanPeak, date.std, "units" = c("days")))
catch_peak
## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = round_date(mean(date.std),"day"),
MeanDiff = difftime(MeanPeak, date.std, "units" = c("days")))
catch_peak
View(catch_peak)
catch_peak.spring <- catch_peak %>% filter(Period == "Spring")
catch_peak.fall <- catch_peak %>% filter(Period == "Fall")
# Summary Tables ----
## *  First and Last Pass Dates ----
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
minPass.sd   = sd(Date_min.std, na.rm = T),
minPass.Avg  = mean(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T),
maxPass.sd   = sd(Date_max.std, na.rm =T),
maxPass.Avg  = mean(Date_max.std, na.rm =T))
View(pass.period)
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
minPass.max  = max(Date_min.std, na.rm = T),
minPass.Avg  = mean(Date_min.std, na.rm = T),
maxPass.min  = min(Date_max.std, na.rm =T),
maxPass.max  = max(Date_max.std, na.rm =T),
maxPass.Avg  = mean(Date_max.std, na.rm =T))
pass.period
# Summary Tables ----
## *  First and Last Pass Dates ----
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T)) %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(minMean  = round_date(mean(minPass.min),"day"),
maxMean  = round_date(mean(minPass.min),"day"),
minMeanDiff = difftime(MeanPeak, minPass.min, "units" = c("days")))
pass.period
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T)) %>%
ungroup()
pass.period
# Summary Tables ----
## *  First and Last Pass Dates ----
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T)) %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(minMean  = round_date(mean(minPass.min, na.rm = TRUE),"day"),
maxMean  = round_date(mean(maxPass.max, na.rm = TRUE),"day"),
minMeanDiff = difftime(MeanPeak, minPass.min, "units" = c("days")))
# Summary Tables ----
## *  First and Last Pass Dates ----
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T)) %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(minMean  = round_date(mean(minPass.min, na.rm = TRUE),"day"),
maxMean  = round_date(mean(maxPass.max, na.rm = TRUE),"day"),
minMeanDiff = difftime(minMean, minPass.min, "units" = c("days")),
maxMeanDiff = difftime(maxMean, maxPass.max, "units" = c("days")))
pass.period
format(sd(catch_peak.spring$MeanDiff[catch_peak.spring$Species=="CT"],na.rm = TRUE), "%B %d")
## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = round_date(mean(date.std),"day"),
MeanDiff = difftime(MeanPeak, date.std, "units" = c("days")))
catch_peak.spring <- catch_peak %>% filter(Period == "Spring")
catch_peak.fall <- catch_peak %>% filter(Period == "Fall")
catch_peak.spring
sd(catch_peak.spring$MeanDiff[catch_peak.spring$Species=="CT"],na.rm = TRUE)
round(sd(catch_peak.spring$MeanDiff[catch_peak.spring$Species=="CT"],na.rm = TRUE),1)
## * Date of 50% Passage ----
catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch       = sum(catch),
cum_catch   = cumsum(catch)) %>%
ungroup() %>%
group_by(Period, Year) %>%
mutate(total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)),
week.std    = week(date.std)) %>%
mutate(Decade = floor_decade(as.numeric(Year))) %>%
select(Species, Period, Year, date.std, everything())
catch_prop
catch50prop <- catch_prop %>%
group_by(Period, Year, Species) %>%
summarise(prop50 = nth(prop, which.min(abs(prop-0.5))))
catch50prop <- catch_prop %>%
group_by(Period, Year, Species) %>%
summarise(prop50 = nth(prop, which.min(abs(prop-0.5))))
catch50prop
catch50prop <- catch_prop %>%
group_by(Period, Year, Species) %>%
summarise(prop50 = nth(prop, which.max(abs(prop-0.5))))
catch50prop
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5))
catch50prop
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5)) %>%
group_by(Species, Period, Year) %>%
filter(dif = min(dif))
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5)) %>%
group_by(Species, Period, Year) %>%
filter(dif == min(dif))
catch50prop
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5)) %>%
group_by(Species, Period, Year) %>%
filter(dif == min(dif)) %>%
summarise(meanDate = mean(date.std, na.rm = TRUE))
catch50prop
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5)) %>%
group_by(Species, Period, Year) %>%
filter(dif == min(dif)) %>%
summarise(date.50p = round_date(mean(date.std, na.rm = TRUE), "days")) %>%
ungroup() %>%
group_by(Species, Period) %>%
mutate(meanDate50p = round_date(mean(date.50p, na.rm =TRUE), "days"),
Date50pDiff = difftime(meanDate50p, date.50p,"units" = c("days")))
catch50prop
catch50prop.spring <- catch50prop %>% filter(Period == "Spring")
catch50prop.fall <- catch50prop %>% filter(Period == "Fall")
format(catch50prop.spring$meanDate50p[catch50prop.spring$Species=="CT"], "%B %d")
format(mean(catch50prop.spring$meanDate50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), "%B %d")
Catch_Peak_Plot.Spring
format(mean(catch50prop.spring$meanDate50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), "%B %d")
round(sd(catch50prop.spring$meanDate50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), 1)
format(min(catch50prop.spring$date50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), "%B %d")
catch50prop.spring
format(min(catch50prop.spring$date.50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), "%B %d")
format(max(catch50prop.spring$date.50p[catch50prop.spring$Species=="CT"], na.rm = TRUE), "%B %d")
sd(catch50prop.spring$Date50pDiff)
sd(catch50prop.spring$Date50pDiff[catch50prop.spring$Species =="CT"])
daily_catch.Spring.CT
## * * Spring CT Timing Plot ----
daily_catch.Spring.CT <- daily_catch_plot[[1]][[2]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-04-15"),
y = 125,
hjust = "left", vjust = 0,
inherit.aes = FALSE)
# 5. Capture Timing  ----
## Load Data
## All Data
ifelse(exists('data_all') && is.data.frame(get('data_all')),
" ",
source("SourceFiles/1. Load and Prep Data.R"))
## Load Trap Effort Data
ifelse(exists('trap_effort') && is.data.frame(get('trap_effort')),
" ",
source("SourceFiles/2. Trapping Effort.R"))
## Load Annual Capture Data
ifelse(exists('catch_annual') && is.data.frame(get('catch_annual')),
" ",
source("SourceFiles/4. Annual Captures.R"))
# Summary Tables ----
## *  First and Last Pass Dates ----
pass.period <- catch_annual_table %>%
mutate(Date_min.std = case_when(year(Date_min) >= 0 ~ 'year<-'(Date_min, 2024)),
Date_med.std = case_when(year(Date_med) >= 0 ~ 'year<-'(Date_med, 2024)),
Date_max.std = case_when(year(Date_max) >= 0 ~ 'year<-'(Date_max, 2024))) %>%
group_by(Period, Year, Species) %>%
summarize(minPass.min  = min(Date_min.std, na.rm = T),
maxPass.max  = max(Date_max.std, na.rm =T)) %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(minMean  = round_date(mean(minPass.min, na.rm = TRUE),"day"),
maxMean  = round_date(mean(maxPass.max, na.rm = TRUE),"day"),
minMeanDiff = difftime(minMean, minPass.min, "units" = c("days")),
maxMeanDiff = difftime(maxMean, maxPass.max, "units" = c("days")))
pass.period.spring <- pass.period %>% filter(Period == "Spring")
pass.period.fall <- pass.period %>% filter(Period == "Fall")
## * Date of 50% Passage ----
catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch       = sum(catch),
cum_catch   = cumsum(catch)) %>%
ungroup() %>%
group_by(Period, Year) %>%
mutate(total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)),
week.std    = week(date.std)) %>%
mutate(Decade = floor_decade(as.numeric(Year))) %>%
select(Species, Period, Year, date.std, everything())
catch_prop.spring <- catch_prop %>% filter(Period == "Spring")
catch_prop.fall <- catch_prop %>% filter(Period == "Fall")
catch50prop <- catch_prop %>%
mutate(dif = abs(prop-0.5)) %>%
group_by(Species, Period, Year) %>%
filter(dif == min(dif)) %>%
summarise(date.50p = round_date(mean(date.std, na.rm = TRUE), "days")) %>%
ungroup() %>%
group_by(Species, Period) %>%
mutate(meanDate50p = round_date(mean(date.50p, na.rm =TRUE), "days"),
Date50pDiff = difftime(meanDate50p, date.50p,"units" = c("days")))
catch50prop.spring <- catch50prop %>% filter(Period == "Spring")
catch50prop.fall <- catch50prop %>% filter(Period == "Fall")
## Date of Peak Migration ----
catch_peak <- catch_prop <- data_all %>%
filter(Species %in% c("CO","CT"),
complete.cases(Species)) %>%
mutate(catch =1) %>%
group_by(Period, Year, Date, Species) %>%
summarize(catch = sum(catch)) %>%
ungroup() %>%
group_by(Period, Year, Species) %>%
filter(catch == max(catch)) %>%
mutate(date.std = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
rename(PeakCatch = "catch") %>%
ungroup() %>%
group_by(Period,Species) %>%
mutate(MeanPeak  = round_date(mean(date.std),"day"),
MeanDiff = difftime(MeanPeak, date.std, "units" = c("days")))
catch_peak.spring <- catch_peak %>% filter(Period == "Spring")
catch_peak.fall <- catch_peak %>% filter(Period == "Fall")
## Plots ----
## Daily Captures ----
## Plot labels
## Spring Labels
labels <- data.frame(Year = unique(data_all$Year), YYYEAR = unique(data_all$Year)) %>%
# data.frame(Year = unique(CCT_catch$Year), YYYEAR = unique(CCT_catch$Year)) %>%
mutate(YYYEAR = ifelse(Year == 2020, "2020 - COVID",
ifelse(Year == 2021,"2021 - COVID",
ifelse(Year == 2023, "2023 - Strike",Year))),
labX = as.Date(ifelse(Year == 2020, as.Date("2024-05-25"),
ifelse(Year == 2021,as.Date("2024-05-25"),
ifelse(Year == 2023, as.Date("2024-05-25"),as.Date("2024-04-16"))))))
## Fall Labels
fall.labels <- data.frame(Year = unique(data_all$Year), YYYEAR = unique(data_all$Year)) %>%
# data.frame(Year = unique(CCT_catch$Year), YYYEAR = unique(CCT_catch$Year)) %>%
mutate(YYYEAR = ifelse(Year == 2020, "2020 - COVID",
ifelse(Year == 2021,"2021 - COVID",Year)),
labX = as.Date(ifelse(Year == 2020, as.Date("2024-10-01"),
ifelse(Year == 2021,as.Date("2024-10-25"),as.Date("2024-10-01")))))
## Create empty list to save plots to
daily_catch_plot <- list()
daily_catch_summary_plot <- list()
## Prep For Loop Variables
sample_period <- c("Spring","Fall")
spp <- c("CO","CT")
## Run for loops
for(i in sample_period){
for(j in spp){
xx <- data_all %>%
filter(Period == i,
Species == j)
# Species %in% c("CO","CT"))
## Prepare Data
yy <- left_join(date_seq, xx,
by = c("Date", "Month")) %>%
mutate(Year = strftime(Date, format = "%Y"),
Species = j,
Period = i,
Catch = ifelse(Length >0,1,0),) %>%
group_by(Period, Date, Species) %>%
summarize(catch = sum(Catch)) %>%
mutate(catch = coalesce(catch,0),
Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year, Period, Species) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
prop.scaled = ifelse(Species == "CT" & Period == "Fall", prop*10,prop*300),
# prop.scaled = prop*ifelse(i == "Spring",300,100),
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)),
week.std    = week(date.std),
Period.Filter = ifelse(date.std>=as.Date("2024-04-15") &
date.std <=as.Date("2024-06-15"),
"Spring",
ifelse(date.std>=as.Date("2024-09-15") &
date.std <=as.Date("2024-12-31"),
"Fall",NA))) %>%
filter(Period.Filter == i) %>%
mutate(Decade = floor_decade(as.numeric(Year)),
Species = j,
Period  = i) %>%
select(Species, Period, everything()) %>%
filter(!is.na(Period.Filter))
## Save dataframes for each season
assign(paste("catch_timing.plot",i, j, sep="_"), yy)
## Daily Capture Plot
y.plot <- ggplot(yy) +
geom_col(aes(x= date.std, y =catch))+
geom_line(aes(x= date.std, y = prop.scaled)) +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d") +
scale_y_continuous("Total Captures (# of Fish)",
sec.axis = sec_axis(~./300,
name = "Proportion of Total Catch (%)"))+
facet_grid(Year~Species) +
labs(x="", y = "Total Captures (# of Fish)") +
theme_bw() +
theme(strip.text.y = element_blank())
# assign name to plot
daily_catch_plot[[i]][[j]] <- y.plot
## Daily Capture - Summary Plots
yy.plot <- ggplot(yy) +
geom_col(aes(x = date.std, y = catch, fill = Year)) +
labs(x="", y = "Total Captures (# of Fish)") +
theme_bw()
daily_catch_summary_plot[[i]][[j]] <- yy.plot
}
}
## * * Spring CT Timing Plot ----
daily_catch.Spring.CT <- daily_catch_plot[[1]][[2]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-04-15"),
y = 125,
hjust = "left", vjust = 0,
inherit.aes = FALSE)
daily_catch.Spring.CT
daily_catch_plot.Spring.CO
## * * Spring CO Timing Plot ----
daily_catch_plot.Spring.CO <- daily_catch_plot[[1]][[1]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-04-15"),
y = 125,
hjust = "left", vjust = 0,
inherit.aes = FALSE)
## * * Fall CT Timing Plot ----
daily_catch_plot.Fall.CT <- daily_catch_plot[[2]][[2]] +
geom_label(data = fall.labels,
aes(label = YYYEAR),
x = as.Date("2024-09-15"),
y = 2,
hjust = "left",
vjust = 0,
inherit.aes = FALSE) +
scale_y_continuous("Total Captures (# of Fish)",
breaks = seq(0,10,5),
sec.axis = sec_axis(~./10,
name = "Proportion of Total Catch (%)"))
## * * Fall CO Timing Plot ----
daily_catch_plot.Fall.CO <- daily_catch_plot[[2]][[1]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-09-15"),
y = 100,
hjust = "left",
vjust = 0,
inherit.aes = FALSE)
## Daily Summary Plot ----
daily_catch_summary_plot.Spring.CT <- daily_catch_summary_plot[[1]][[2]]
daily_catch_summary_plot.Spring.CT
daily_catch_summary_plot.Spring.CO
daily_catch_summary_plot.Spring.CO <- daily_catch_summary_plot[[1]][[1]]
## Peak Catch Timing Plots ----
Catch_Peak_Plot.Spring <- ggplot(catch_peak.spring) +
geom_histogram(aes(x =date.std)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,2,1)) +
theme_bw() +
facet_grid(Species ~.)
Catch_Peak_Plot.Spring
## Date of 50% Passage Plot
Date50p.plot.spring <- ggplot(catch50prop.spring) +
geom_histogram(aes(x =date.std)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,2,1)) +
theme_bw() +
facet_grid(Species ~.)
Date50p.plot.spring
catch50prop.spring
## Date of 50% Passage Plot
Date50p.plot.spring <- ggplot(catch50prop.spring) +
geom_histogram(aes(x =date.50p)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,2,1)) +
theme_bw() +
facet_grid(Species ~.)
ggplot(catch50prop.spring) +
geom_histogram(aes(x =date.50p)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,2,1)) +
theme_bw() +
facet_grid(Species ~.)
ggplot(catch50prop.spring) +
geom_histogram(aes(x =date.50p)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,3,1)) +
theme_bw() +
facet_grid(Species ~.)
Date50p.plot.spring <- ggplot(catch50prop.fall) +
geom_histogram(aes(x =date.50p)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,3,1)) +
theme_bw() +
facet_grid(Species ~.)
## Date of 50% Passage Plot
Date50p.plot.spring <- ggplot(catch50prop.spring) +
geom_histogram(aes(x =date.50p)) +
labs(x = "", y = "Frequency") +
scale_y_continuous(breaks = seq(0,3,1)) +
theme_bw() +
facet_grid(Species ~.)
Date50p.plot.spring
