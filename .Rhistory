Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year, Period, Species) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
prop.scaled = ifelse(Species == "CT" & Period == "Fall", prop*10,prop*300),
# prop.scaled = prop*ifelse(i == "Spring",300,100),
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)),
week.std    = week(date.std),
Period.Filter = ifelse(date.std>=as.Date("2024-04-15") &
date.std <=as.Date("2024-06-15"),
"Spring",
ifelse(date.std>=as.Date("2024-09-15") &
date.std <=as.Date("2024-12-31"),
"Fall",NA))) %>%
filter(Period.Filter == i) %>%
mutate(Decade = floor_decade(as.numeric(Year)),
Species = j,
Period  = i) %>%
select(Species, Period, everything()) %>%
filter(!is.na(Period.Filter))
## Save dataframes for each season
assign(paste("catch_timing.plot",i, j, sep="_"), yy)
## Prepare Plots
z <- ggplot(yy) +
geom_col(aes(x= date.std, y =catch))+
geom_line(aes(x= date.std, y = prop.scaled)) +
scale_x_date(date_breaks = "2 week", date_labels = "%b-%d") +
scale_y_continuous("Total Captures (# of Fish)",
sec.axis = sec_axis(~./300,
name = "Proportion of Total Catch (%)"))+
facet_grid(Year~Species) +
labs(x="", y = "Total Captures (# of Fish)") +
theme_bw() +
theme(strip.text.y = element_blank())
# assign name to plot
catch_timing_plots[[i]][[j]] <- z
}
}
## * * Spring CT Timing Plot ----
catch_timing_plot.Spring.CT <- catch_timing_plots[[1]][[2]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-04-15"),
y = 125,
hjust = "left", vjust = 0,
inherit.aes = FALSE)
## * * Spring CO Timing Plot ----
catch_timing_plot.Spring.CO <- catch_timing_plots[[1]][[1]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-04-15"),
y = 125,
hjust = "left", vjust = 0,
inherit.aes = FALSE)
## * * Fall CT Timing Plot ----
catch_timing_plot.Fall.CT <- catch_timing_plots[[2]][[2]] +
geom_label(data = fall.labels,
aes(label = YYYEAR),
x = as.Date("2024-09-15"),
y = 2,
hjust = "left",
vjust = 0,
inherit.aes = FALSE) +
scale_y_continuous("Total Captures (# of Fish)",
breaks = seq(0,10,5),
sec.axis = sec_axis(~./10,
name = "Proportion of Total Catch (%)"))
## * * Fall CO Timing Plot ----
catch_timing_plot.Fall.CO <- catch_timing_plots[[2]][[1]] +
geom_label(data = labels,
aes(label = YYYEAR),
x = as.Date("2024-09-15"),
y = 100,
hjust = "left",
vjust = 0,
inherit.aes = FALSE)
pass.period.spring <- pass.period %>% filter(Period == "Spring")
pass.period.fall <- pass.period %>% filter(Period == "Fall")
colnames(cond_data_wide)
colnames(cond_data_wide)
## Load Stream Conditions Data
source("SourceFiles/3. Stream Conditions.R")
cond_data_wide.spring <- cond_data_wide %>% filter(1:)
knitr::opts_chunk$set(echo = FALSE)
## Clear workspace ##
rm(list = ls())
# ## Load Prepped Data
# source("SourceFiles/1. Load and Prep Data.R")
## Load Trap Effort Data
source("SourceFiles/2. Trapping Effort.R")
## Kable - Master Summary ----
options(knitr.kable.NA = '-')
kable(trap_effort_table,
"html",
booktabs = T,
align = c("c"),
col.names = c("Year", "# Days Sampled", "Start", "End",
"# Days Sampled", "Start", "End"),
caption = "Table 1. Annual spring and fall trap operation periods.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Spring Sampling" = 3, "Fall Sampling" = 3))
trap_effort_plot_spring
trap_effort_plot_fall
## Load Stream Conditions Data
source("SourceFiles/3. Stream Conditions.R")
colnames(cond_data_wide)
cond_data_wide.spring <- cond_data_wide %>% filter(1:13)
cond_data_wide.spring <- cond_data_wide %>% select(1:13)
cond_data_wide.spring
cond_data_wide.spring <- cond_data_wide %>% select(1:13)
cond_data_wide.spring
cond_data_wide.spring <- cond_data_wide %>% select(1:13)
colnames(cond_data_wide)
## Kable - Stream Conditions ----
options(knitr.kable.NA = '-')
kable(cond_data_wide.spring,
"html",
booktabs = T,
align = c("c"),
col.names = c(" ", "Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD"),
caption = "Table 1. Annual spring and fall trap operation periods.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Air Temp. \n(\u00B0C)" = 2, "Water Temp. \n(\u00B0C)" = 2,
"pH \n. " = 2, "DO \n(mg/L)" = 2, "TDS \n(ppm)" = 2, "Water Level \n(m)" = 2)) %>%
add_header_above(c("Year"= 1, "Spring Monitoring" = 12))
cond_data_wide.spring <- cond_data_wide %>% select(1,14:25)
## Kable - Stream Conditions ----
options(knitr.kable.NA = '-')
kable(cond_data_wide.spring,
"html",
booktabs = T,
align = c("c"),
col.names = c(" ", "Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD"),
caption = "Table 1. Annual spring and fall trap operation periods.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Air Temp. \n(\u00B0C)" = 2, "Water Temp. \n(\u00B0C)" = 2,
"pH \n. " = 2, "DO \n(mg/L)" = 2, "TDS \n(ppm)" = 2, "Water Level \n(m)" = 2)) %>%
add_header_above(c("Year"= 1, "Spring Monitoring" = 12))
colnames(catch_annual.Table.Spring)
# 4. Annual Captures  ----
## Load Data
## All Data
ifelse(exists('data_all') && is.data.frame(get('data_all')),
" ",
source("SourceFiles/1. Load and Prep Data.R"))
## Load Trap Effort Data
ifelse(exists('trap_effort') && is.data.frame(get('trap_effort')),
" ",
source("SourceFiles/2. Trapping Effort.R"))
# Annual Catches ----
# * Annual Catches (All Species) ----
catch_annual_all_species <- data_all %>%
# filter(Species %in% c("CT","CO")) %>%
group_by(Year, Period, Species) %>%
summarize(n = n(),
n = coalesce(n,0),
Date_min = min(Date, na.rm=T),
Date_med = median(Date, na.rm=T),
Date_max = max(Date, na.rm=T),
FL_mean  = mean(Length, na.rm = T),
FL_SD    = sd(Length, na.rm = T)) %>%
filter(!is.na(Species))
# * Annual Catches (CO CT) -----
catch_annual_table <- catch_annual_all_species %>%
filter(Species %in% c("CT","CO"))
## * * Annual Catches (CO CT) - Wide ----
catch_annual_table_wide <- catch_annual_table %>%
pivot_wider(names_from = Period,
values_from = c(n, Date_min,Date_med, Date_max, FL_mean,FL_SD)) %>%
select(Year, Species,
n_Spring, Date_min_Spring, Date_med_Spring,
Date_max_Spring, FL_mean_Spring, FL_SD_Spring,
n_Fall, Date_min_Fall, Date_med_Fall,
Date_max_Fall, FL_mean_Fall, FL_SD_Fall)
# Seasonal Catches ----
## Prep Data
spp <- c("CO", "CT")
# for loop to summarize CO and CT catch data
for(i in spp){
x <- data_all %>%
filter(Species == i) %>%
group_by(Year, Period, Species) %>%
summarize(n = n(),
n = coalesce(n,0),
Date_min = min(Date, na.rm=T),
Date_med = median(Date, na.rm=T),
Date_max = max(Date, na.rm=T),
FL_mean = mean(Length, na.rm = T),
FL_min  = min(Length, na.rm = T),
FL_max  = max(Length, na.rm = T),
FL_SD   = sd(Length, na.rm = T))
## Create DF's named "catch_CT" and "catch_CO"
assign(paste0("catch_", i, sep = ""), x)
}
trap_effort2 <- trap_effort %>%
mutate(start = as.Date(start, "%b-%d"),
end = as.Date(end,"%b-%d"))
## * * Total Seasonal Catches All Species
catch_seasonal_all_species <- catch_annual_all_species %>%
group_by(Period,Species) %>%
summarise(Catch.Total = sum(n),
Catch.Avg   = mean(n),
Catch.SD    = sd(n),
Years       = n()) %>%
mutate(Years.Perc  = ifelse(Period == "Spring",
Years/max(Years[Period=="Spring"]),
Years/max(Years[Period=="Fall"])))
## * * All Seasons Catch Table ----
catch_annual.Table.all.seasons <- left_join(trap_effort2, catch_CT,
by = c("Year", "Period"),
suffix = c("","_CT")) %>%
left_join(.,catch_CO,
by = c("Year","Period"),
suffix = c("CT","CO")) %>%
select("Year", "Period", "start","end", "trap_days",
"Date_medCT","Date_minCT", "Date_maxCT",
"nCT", "FL_meanCT", "FL_SDCT", "FL_minCT", "FL_maxCT",
"Date_medCO","Date_minCO", "Date_maxCO",
"nCO", "FL_meanCO", "FL_SDCO", "FL_minCO", "FL_maxCO") %>%
mutate(start = format(as.Date(start), "%b-%d"),
end   = format(as.Date(end), "%b-%d"),
Date_medCT = format(Date_medCT, "%b-%d"),
Date_minCT = format(Date_minCT, "%b-%d"),
Date_maxCT = format(Date_maxCT, "%b-%d"),
Date_medCO = format(Date_medCO, "%b-%d"),
Date_minCO = format(Date_minCO, "%b-%d"),
Date_maxCO = format(Date_maxCO, "%b-%d")) %>%
mutate_at(vars(nCT,nCO), ~replace_na(.,0))
## * * Spring Catch Table ----
catch_annual.Table.Spring <- catch_annual.Table.all.seasons %>%
filter(Period == "Spring") %>%
select(!Period)
colnames(catch_annual.Table.Spring)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = Date_minCT - start,
CT_days.before.end  = Date_maxCT - end,
CO_days.after.start = Date_minCO - start,
CO_days.before.end  = Date_maxCO - end,)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = Date_minCT - start,
CT_days.before.end  = Date_maxCT - end,
CO_days.after.start = Date_minCO - start,
CO_days.before.end  = Date_maxCO - end)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = as.Date(Date_minCT) - as.Date(start),
CT_days.before.end  = Date_maxCT - end,
CO_days.after.start = Date_minCO - start,
CO_days.before.end  = Date_maxCO - end)
str(catch_annual.Table.Spring)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = as.Date(as.character(Date_minCT)) - as.Date(as.character((start)))
CT_days.before.end  = Date_maxCT - end,
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = as.Date(as.character(Date_minCT)) - as.Date(as.character(start)))
as.Date(Date_minCT, format = "%b-%d")
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
mutate(CT_days.after.start = as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d"))
catch_annual.Table.Spring.calcs
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d"),
CT_days.before.end  = as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d"),
CO_days.after.start = as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d"),
CO_days.before.end  = as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))
catch_annual.Table.Spring.calcs
install.packages("janitor")
library(janitor)
## * * Spring Catch Table ----
catch_annual.Table.Spring <- catch_annual.Table.all.seasons %>%
filter(Period == "Spring") %>%
select(!Period)
colnames(catch_annual.Table.Spring)
str(catch_annual.Table.Spring)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d"),
CT_days.before.end  = as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d"),
CO_days.after.start = as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d"),
CO_days.before.end  = as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d")) %>%
adorn_totals("row")
str(catch_annual.Table.Spring.calcs)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d"),
CO_days.after.start = as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d"),
CO_days.before.end  = as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d")) %>%
adorn_totals("row")
str(catch_annual.Table.Spring.calcs)
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
adorn_totals("row")
catch_annual.Table.Spring.calcs
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start),
CT_days.before.end= mean(CT_days.before.end),
CO_days.after.start= mean(CO_days.after.start),
CO_days.before.end= mean(CO_days.before.end)))
catch_annual.Table.Spring.calcs
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start),
CT_days.before.end= mean(CT_days.before.end),
CO_days.after.start= mean(CO_days.after.start),
CO_days.before.end= mean(CO_days.before.end))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
catch_annual.Table.Spring.calcs
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start),
CT_days.before.end= mean(CT_days.before.end),
CO_days.after.start= mean(CO_days.after.start),
CO_days.before.end= mean(CO_days.before.end))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start),
CT_days.before.end= mean(CT_days.before.end),
CO_days.after.start= mean(CO_days.after.start),
CO_days.before.end= mean(CO_days.before.end))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start, na.rm = T),
CT_days.before.end= mean(CT_days.before.end, na.rm = T),
CO_days.after.start= mean(CO_days.after.start, na.rm = T),
CO_days.before.end= mean(CO_days.before.end, na.rm = T))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start, na.rm = T),
CT_days.before.end= mean(CT_days.before.end, na.rm = T),
CO_days.after.start= mean(CO_days.after.start, na.rm = T),
CO_days.before.end= mean(CO_days.before.end, na.rm = T)))
rlang::last_trace()
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
mutate(Year = as.character(Year)) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start, na.rm = T),
CT_days.before.end= mean(CT_days.before.end, na.rm = T),
CO_days.after.start= mean(CO_days.after.start, na.rm = T),
CO_days.before.end= mean(CO_days.before.end, na.rm = T))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
catch_annual.Table.Spring.calcs
n(catch_annual.Table.Spring.calcs$CT_days.after.start[CT_days.after.start==0])
length(catch_annual.Table.Spring.calcs$CT_days.after.start[CT_days.after.start==0])
length(catch_annual.Table.Spring.calcs$CT_days.after.start[CT_days.after.start==0])
catch_annual.Table.Spring.calcs  <- catch_annual.Table.Spring %>%
summarise(CT_days.after.start = as.numeric(as.Date(Date_minCT, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CT_days.before.end  = as.numeric(as.Date(Date_maxCT, format = "%b-%d") - as.Date(end, format = "%b-%d")),
CO_days.after.start = as.numeric(as.Date(Date_minCO, format = "%b-%d") - as.Date(start, format = "%b-%d")),
CO_days.before.end  = as.numeric(as.Date(Date_maxCO, format = "%b-%d") - as.Date(end, format = "%b-%d"))) %>%
mutate(Year = as.character(Year)) %>%
# adorn_totals("row") %>%
bind_rows(summarize(.,Year = "Overal Avg",
CT_days.after.start = mean(CT_days.after.start, na.rm = T),
CT_days.before.end= mean(CT_days.before.end, na.rm = T),
CO_days.after.start= mean(CO_days.after.start, na.rm = T),
CO_days.before.end= mean(CO_days.before.end, na.rm = T))) %>%
bind_rows(summarize(.,Year = "St. Dev.",
CT_days.after.start = sd(CT_days.after.start),
CT_days.before.end= sd(CT_days.before.end),
CO_days.after.start= sd(CO_days.after.start),
CO_days.before.end= sd(CO_days.before.end)))
length(catch_annual.Table.Spring.calcs$CT_days.after.start[CT_days.after.start==0])
length(catch_annual.Table.Spring.calcs$CT_days.after.start[catch_annual.Table.Spring.calcs$CT_days.after.start==0])
catch_annual.Table.Spring.calcs
catch_annual.Table.Spring
catch_annual.Table.Spring.calcs
length(catch_annual.Table.Spring.calcs$CO_days.before.end[catch_annual.Table.Spring.calcs$CO_days.before.end==0])/length(catch_annual.Table.Spring.calcs$Year)
percent(length(catch_annual.Table.Spring.calcs$CO_days.before.end[catch_annual.Table.Spring.calcs$CO_days.before.end==0])/length(catch_annual.Table.Spring.calcs$Year))
catch_annual_barPlot.Spring
knitr::opts_chunk$set(echo = FALSE)
## Clear workspace ##
rm(list = ls())
# ## Load Prepped Data
# source("SourceFiles/1. Load and Prep Data.R")
## Load Trap Effort Data
source("SourceFiles/2. Trapping Effort.R")
## Kable - Master Summary ----
options(knitr.kable.NA = '-')
kable(trap_effort_table,
"html",
booktabs = T,
align = c("c"),
col.names = c("Year", "# Days Sampled", "Start", "End",
"# Days Sampled", "Start", "End"),
caption = "Table 1. Annual spring and fall trap operation periods.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Spring Sampling" = 3, "Fall Sampling" = 3))
trap_effort_plot_spring
trap_effort_plot_fall
## Load Stream Conditions Data
source("SourceFiles/3. Stream Conditions.R")
cond_data_wide.spring <- cond_data_wide %>% select(1:13)
## Kable - Stream Conditions ----
options(knitr.kable.NA = '-')
kable(cond_data_wide.spring,
"html",
booktabs = T,
align = c("c"),
col.names = c(" ", "Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD"),
caption = "Table 2. Stream conditions during spring trap operation.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Air Temp. \n(\u00B0C)" = 2, "Water Temp. \n(\u00B0C)" = 2,
"pH \n. " = 2, "DO \n(mg/L)" = 2, "TDS \n(ppm)" = 2, "Water Level \n(m)" = 2)) %>%
add_header_above(c("Year"= 1, "Spring Monitoring" = 12))
cond_data_wide.fall <- cond_data_wide %>% select(1,14:25)
## Kable - Stream Conditions ----
options(knitr.kable.NA = '-')
kable(cond_data_wide.fall,
"html",
booktabs = T,
align = c("c"),
col.names = c(" ", "Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD","Mean","SD"),
caption = "Table 3. Stream conditions during fall trap operation.",
digits = 1) %>%
column_spec(c(2,5), width = "2cm") %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Air Temp. \n(\u00B0C)" = 2, "Water Temp. \n(\u00B0C)" = 2,
"pH \n. " = 2, "DO \n(mg/L)" = 2, "TDS \n(ppm)" = 2, "Water Level \n(m)" = 2)) %>%
add_header_above(c("Year"= 1, "Fall Monitoring" = 12))
cond_plot
source("SourceFiles/4. Annual Captures.R")
catch_annual_barPlot.Spring
source("SourceFiles/5. Capture Timing.R")
