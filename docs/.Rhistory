library(purrr)
library(tidyr)
library(dplyr)
library(lubridate)
library(reshape2)
library(ggplot2)
library(scales)
library(readxl)
library(openxlsx)
library(downloadthis)
library(knitr)
library(captioner)
library(zoo)
library(gridExtra)
library(plotly)
library(htmlwidgets)
library(formattable)
library(xfun)
library(kableExtra)
library(shiny)
##  Set up captioner package calls.
fig_nums   <- captioner(prefix = "Figure")
table_nums <- captioner(prefix = "Table")
## Define Working Directory ---
setwd("C:/Users/evogt/R Analysis/EAV/GitHubMarkdown/SimmsCreek/docs")
## Define Input Files
#1 Load Simms Bio Data from all years
#1.1 List of all files in Directory
files_list <- list.files("Data/", pattern = "*.xlsx", full.names = TRUE)
# Use lapply to read in all files and store them as list elements in one list
list_of_dfs <- lapply(as.list(files_list), function(x) readWorkbook(x, sheet = "SimmsBioData"))
# Create a vector of names based on the year of data collection.
df_names2 <- paste0("SimmsBio_", as.numeric(str_extract(files_list, "(\\d)+")))
# Assign the names to our list of dfs
names(list_of_dfs) <- df_names2
#1.2 Select Columns of Interest
my_cols <- c("Date", "Species", "Stage", "US/DS", "Length", "Weight", "Comments")
dfs_list <- lapply(list_of_dfs, "[", my_cols)
#3 Join all dataframes together
simms_bio <-   bind_rows(dfs_list, .id = "Dataset") %>%
mutate(DatasetYear = as.numeric(str_extract(Dataset, "(\\d)+")),
Date = as.Date(Date, origin = "1899-12-30"),
Year = as.numeric(format(Date, format = "%Y"))) %>%
filter(DatasetYear == Year) %>%                                          # Filter to exclude relic data from past years
rename(Direction = "US/DS") %>%
mutate(Direction = recode(as.factor(Direction),
US        = "Upstream",
'US '      = "Upstream",
UST       = "Upstream",
DS        = "Downstream",
'DS '      = "Downstream",
DST       = "Downstream"),
Species = recode(as.factor(Species),
"CO"  = "CO",
"CO " = "CO",
"CT"  = "CT",
"CT " = "CT",
"CN"  = "CN",
"CN " = "CN"))
# Chunk 3
# When trap was operated
## Create Date Sequence - All dates when trap could be checked
date_seq <- data.frame(Date = seq(ymd('2008-04-15'), ymd('2024-06-15'), by = 'days')) %>%
mutate(Month = strftime(Date, format = "%m"),
Month = as.numeric(Month)) %>%
filter(between(Month,4,6))
## Which days trap was operated each year
trap <- simms_bio %>%
group_by(Date) %>%
summarize(n = 1) %>%
mutate(Year = strftime(Date, format = "%Y"))
## Proportion of survey period that was monitored.
trap_ops <- left_join(date_seq, trap, by = "Date") %>%
mutate(n = coalesce(n, 0)) %>%
group_by(Year) %>%
dplyr::summarize(Start = as.Date(min(Date)),
End   = as.Date(max(Date)),
SamplePeriod = as.numeric((End-Start)+1),
DaysSampled = sum(n)) %>%
mutate(prop.sample.period =  percent(DaysSampled/SamplePeriod),
prop.mig.period = percent(DaysSampled/75),
Year  = as.numeric(Year),
Start = format(Start, "%b-%d"),
End   = format(End, "%b-%d"))
## Number of Fish Tallied Annually
annual_tally <- simms_bio %>%
ungroup %>%
filter(Species == "CO" | Species == "CT") %>%
group_by(Year, Species) %>%
dplyr::summarise(n = n()) %>%
pivot_wider(names_from = "Species", values_from = "n")
## Summary Table
summary_table <- left_join(trap_ops,annual_tally, by = "Year") %>%
filter(!is.na(Year)) %>%
select(1:3,5:9) %>%
mutate(Total = CO + CT)
# Chunk 4: display.table
## Prepare Kable Table
kable(summary_table,
"html",
booktabs = T,
align = c("c"),
col.names = c("Year", "Start", "End", "# Days Sampled", "Sample Period", "Migration Period", "CO", "CCT", "Total"),
caption = "**Table 1. Annual trap operation period, proportion of operation period that was monitored, proportion of migration period that was monitored (Apr 1 to June 15), and number of Coho Salmon and Coastal Cutthroat Trout that were tallied.**",
digits = 1) %>%
#column_spec(c(1, 3,10,17), bold = TRUE) %>%
kable_styling("striped", full_width =  FALSE,
position = "center",
font_size = 12,
fixed_thead = TRUE) %>%
add_header_above(c(" " = 1, "Sample Period" = 3, "Prop. Sampled (%)"= 2, "# Fish Tallied" =3))
# Chunk 5: table
CCT_table <-  simms_bio %>%
group_by(Year, Species) %>%
dplyr::summarize(
# Start_Date = as.Date(min(Date), "%b-%d"),
# End_Date   = as.Date(max(Date), "%b-%d"),
# Survey_Length = 1+(as.Date(End_Date) - as.Date(Start_Date)),
n          = n(),
FL_mean = mean(Length, na.rm = TRUE),
FL_SD   = sd(Length, na.rm = TRUE),
FL_min  = min(Length, na.rm = TRUE),
FL_max  = max(Length, na.rm = TRUE),
WT_mean = mean(Weight, na.rm = TRUE),
WT_min  = min(Weight, na.rm = TRUE),
WT_max  = max(Weight, na.rm = TRUE)) %>%
# mutate(Start_Date = format(Start_Date, "%b-%d"),
#        End_Date = format(End_Date, "%b-%d")) %>%
#select("Year","Direction", "Start_Date","End_Date","Survey_Length","n","FL_mean","FL_SD","FL_min","FL_max")
select(1:11)
## Length-Frequency Plot of CCT captured in each year
## Prepare Data
annual.plot <- ggplot(CT_dat) +
geom_histogram(aes(x = Length), binwidth = 5, color = "black", fill = "white") +
labs(x = "Fork Lenght (mm)", y = "Frequency (# Fish)") +
scale_x_continuous(breaks = seq(0, 500, by = 20))+
#scale_y_continuous(breaks = seq(0, 450, 50))+
theme(axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1)) +
theme_bw() +
facet_grid(Year~., axes = "all_x")
## Length-Frequency Plot of all CCT captured to date.
## Prepare Data
CT_dat <- simms_bio %>%
filter(Species == "CT",
!is.na(Direction)) %>%
mutate(date.std =  case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)))
## Prepare Plot
all_years.plot <- ggplot(CT_dat) +
geom_histogram(aes(x = Length), binwidth = 5, color = "black", fill = "white") +
labs(x = "Fork Lenght (mm)", y = "Frequency (# Fish)") +
scale_x_continuous(breaks = seq(50, 450, by = 25))+
#scale_y_continuous(breaks = seq(0, 450, 50))+
theme(axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1)) +
theme_bw() +
facet_grid(Direction~.)
annual.plot <- ggplot(CT_dat) +
geom_histogram(aes(x = Length), binwidth = 5, color = "black", fill = "white") +
labs(x = "Fork Lenght (mm)", y = "Frequency (# Fish)") +
scale_x_continuous(breaks = seq(0, 500, by = 20))+
#scale_y_continuous(breaks = seq(0, 450, 50))+
theme(axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1)) +
theme_bw() +
facet_grid(Year~., axes = "all_x")
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop, color = Direction)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~.) +
theme(legend.position = "bottom") +
theme_bw()
## Prep Data
## Catch Data
CCT_catch <- simms_bio %>%
filter(Species == "CT") %>%
group_by(Date, Direction) %>%
summarize(catch = n()) %>%
mutate(Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)))
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop, color = Direction)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~.) +
theme(legend.position = "bottom") +
theme_bw()
daily_box
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop, color = Direction)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(simms_bio) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop, color = Direction)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(CCT_catch) +
geom_boxplot(aes(x = date.std, y = prop)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
all_catches <- simms_bio %>%
group_by(Date, Direction) %>%
summarize(catch = n()) %>%
mutate(Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)))
daily_box <- ggplot(simms_bio) +
geom_boxplot(aes(x = date.std, y = prop, color = Direction)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction.) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(simms_bio) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
all_catches <- simms_bio %>%
group_by(Species, Date, Direction) %>%
summarize(catch = n()) %>%
mutate(Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024)))
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
all_catches <- simms_bio %>%
group_by(Species, Date, Direction) %>%
summarize(catch = n()) %>%
mutate(Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
filter(is.na(Direction))
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
all_catches <- simms_bio %>%
group_by(Species, Date, Direction) %>%
summarize(catch = n()) %>%
mutate(Year = strftime(Date, format = "%Y")) %>%
ungroup() %>%
group_by(Year) %>%
mutate(cum_catch   = cumsum(catch),
total_catch = max(cum_catch),
prop        = cum_catch/total_catch,
date.std    = case_when(year(Date) >= 0 ~ 'year<-'(Date, 2024))) %>%
filter(!is.na(Direction))
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(y = date.std, x = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(y = date.std, x = prop, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
# scale_y_date(date_minor_breaks = "1 day",
#      date_breaks = '1 week',
#      date_labels = '%b-%d',
#      limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
scale_y_date(date_minor_breaks = "1 day",
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(y = date.std, x = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_boxplot(aes(y = date.std, x = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box
daily_box <- ggplot(all_catches) +
geom_point(aes(y = date.std, x = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw() +
coord_flip()
daily_box <- ggplot(all_catches) +
geom_point(aes(y = date.std, x = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw()
daily_box
daily_box <- ggplot(all_catches) +
geom_point(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_y_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw()
all_catches
daily_box
daily_box <- ggplot(all_catches) +
geom_point(aes(x = date.std, y = catch, color = Species)) +
labs(x = "", y = "Proportion of Total Annual Catch") +
scale_x_date(date_minor_breaks = "1 day",
date_breaks = '1 week',
date_labels = '%b-%d',
limits = c(as.Date("2024-04-01"), as.Date("2024-06-15"))) +
facet_grid(Year~Direction) +
theme(legend.position = "bottom") +
theme_bw()
daily_box
